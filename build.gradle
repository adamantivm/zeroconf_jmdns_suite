/*
 * Copyright (C) 2013 Yujin Robot
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
  gradleVersion = "1.9"
}

buildscript {
  def rosMavenPath = System.getenv("ROS_MAVEN_PATH")
  def rosMavenRepository = System.getenv("ROS_MAVEN_REPOSITORY")

  repositories {
    if (rosMavenPath != null) {
      rosMavenPath.tokenize(":").each { path ->
        maven {
          url uri(path)
        }
      }
    }
    mavenLocal()
    maven {
      url "http://repository.springsource.com/maven/bundles/release"
    }
    maven {
      url "http://repository.springsource.com/maven/bundles/external"
    }
    if (rosMavenRepository != null) {
      maven {
        url rosMavenRepository
      }
    } else {
      maven {
        url "https://github.com/rosjava/rosjava_mvn_repo/raw/master"
      }
    }
    mavenCentral()
  }

  dependencies {
    classpath group: "org.ros.rosjava_bootstrap", name: "gradle_plugins", version: "[0.2,0.3)"
  }
}

apply plugin: "catkin"

allprojects {
  group "com.github.rosjava.zeroconf_jmdns_suite"
  version = project.catkin.pkg.version
}

subprojects {
  apply plugin: "ros"
}

defaultTasks "publishMavenJavaPublicationToMavenRepository"
